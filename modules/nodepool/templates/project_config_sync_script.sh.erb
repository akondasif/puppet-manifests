#!/bin/bash
#
# Script used by ::nodepool Class for cloning the project-config repo.
#
set -e

export BRANCH=${BRANCH:-<%= @project_config_repo_revision %>}
export TMPDIR=${TMPDIR:-/tmp/project-config/}
export REPO=${REPO:-<%= @project_config_repo %>}
export DIR=${DIR:-<%= @project_config_cfg_dir %>}

if [[ -e "${TMPDIR}" ]]; then
  echo "Clean up..."
  rm -rf "${TMPDIR}"
fi

echo "Cloning..."
git clone "${REPO}" "${TMPDIR}"
cd "${TMPDIR}"
git checkout "${BRANCH}"

REVISION=$(git log -1 HEAD | awk 'FNR == 1, /commit/ {print $2}')
PREV_REVISION=$(cat /tmp/project-config-revision.txt 2>/dev/null || echo -n none)
echo -n "${REVISION}" > /tmp/project-config-revision.txt

echo "Revision: \$Id: ${REVISION}"
echo "Previous revision: ${PREV_REVISION}"

if [[ "${REVISION}" == "${PREV_REVISION}" ]]; then
  echo "No updates found."
  exit 0
fi

echo "Linking..."
rm -rf "${DIR}"/{.[^.]*,*}
mv "${TMPDIR}"/* "${DIR}"/

if [[ -f <%= @nodepool_credentials_file_path %> ]]; then
  echo "Setting proper credentials..."
  source <%= @nodepool_credentials_file_path %>
  sed -i 's~{{ DBURI }}~'${DBURI}'~' <%= @project_config_nodepool_yaml_path %>
  sed -i 's~{{ PROVIDERS_USERNAME }}~'${PROVIDERS_USERNAME}'~' <%= @project_config_nodepool_yaml_path %>
  sed -i 's~{{ PROVIDERS_PASSWORD }}~'${PROVIDERS_PASSWORD}'~' <%= @project_config_nodepool_yaml_path %>
  sed -i 's~{{ TARGETS_USERNAME }}~'${TARGETS_USERNAME}'~' <%= @project_config_nodepool_yaml_path %>
  sed -i 's~{{ TARGETS_APIKEY }}~'${TARGETS_APIKEY}'~' <%= @project_config_nodepool_yaml_path %>
  sed -i 's~{{ TARGETS_CREDENTIALSID }}~'${TARGETS_CREDENTIALSID}'~' <%= @project_config_nodepool_yaml_path %>
fi
